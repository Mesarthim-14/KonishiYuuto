//=============================================================================
//
// シールドクラス [shield.cpp]
// Author : Konishi Yuuto
//
//=============================================================================

//=============================================================================
// インクルード
//=============================================================================
#include "shield.h"
#include "renderer.h"
#include "manager.h"
#include "player.h"
#include "sound.h"
#include "texture.h"

//=============================================================================
// インスタンス生成
//=============================================================================
CShield * CShield::Create(D3DXVECTOR3 pos, D3DXVECTOR3 move, D3DXVECTOR3 size, TYPE type, SHIELD_TYPE Stype)
{
	// インスタンス生成
	CShield *pShield = new CShield;

	if (pShield != NULL)
	{
		// 初期化処理
		pShield->Init(pos, size, type);
		pShield->SetMove(move);

		switch (Stype)
		{
		case SHIELD_TYPE_WHITE:
			// テクスチャ
			pShield->BindTexture(CTexture::GetTexture(CTexture::TEXTURE_NUM_BARRIER_BLUE));
			break;

		case SHIELD_TYPE_BLACK:
			// テクスチャ
			pShield->BindTexture(CTexture::GetTexture(CTexture::TEXTURE_NUM_BARRIER_RED));
			break;
		}
	}
	return pShield;
}

//=============================================================================
// コンストラクタ
//=============================================================================
CShield::CShield() : CScene2D(TYPE_SHIELD)
{
	m_Pos = D3DXVECTOR3(0.0f, 0.0f, 0.0f);
	m_move = D3DXVECTOR3(0.0f, 0.0f, 0.0f);
	m_bScaleUp = false;
}

//=============================================================================
// デストラクタ
//=============================================================================
CShield::~CShield()
{

}

//=============================================================================
// 初期化処理
//=============================================================================
HRESULT CShield::Init(D3DXVECTOR3 pos, D3DXVECTOR3 size, TYPE type)
{
	// 初期化処理
	CScene2D::Init(pos, size, type);

	return S_OK;
}

//=============================================================================
// 終了処理
//=============================================================================
void CShield::Uninit(void)
{
	// 2Dポリゴン終了処理
	CScene2D::Uninit();
}

//=============================================================================
// 更新処理
//=============================================================================
void CShield::Update(void)
{
	// 2Dポリゴン更新処理
	CScene2D::Update();
}

//=============================================================================
// 描画処理
//=============================================================================
void CShield::Draw(void)
{
	// 2Dポリゴン描画処理
	CScene2D::Draw();
}

//=============================================
// 弾の設定
//=============================================
void CShield::SetMove(D3DXVECTOR3 move)
{
	// 変数に代入
	m_move = move;
}

//=============================================================================
// 拡大のフラグ
//=============================================================================
bool CShield::GetbScale(void)
{
	return m_bScaleUp;
}
